
package com.raven.form;

import Connection.DatabaseConnection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import com.raven.main.Main;
import com.raven.table.CheckBoxTableHeaderRenderer;
import com.raven.table.TableCustom;
import com.raven.table.TableHeaderAlignment;
import com.raven.table.TableHeaderAlignment;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import raven.popup.DefaultOption;
import raven.popup.GlassPanePopup;
import raven.popup.component.SimplePopupBorder;

public class Form_Datakaryawan extends javax.swing.JPanel {

   String ID;
   private TableRowSorter<DefaultTableModel> sorter;
   private CreateBarang CreateKaryawan;

    public Form_Datakaryawan() {
        initComponents();
        //CreateKaryawan = new CreateKaryawan(this); 
        init();
        loadTable();
        initSearch();
        TableCustom.apply(scroll, TableCustom.TableType.DEFAULT);
    }
    
     private void init() {
       Maintable.getTableHeader().putClientProperty(FlatClientProperties.STYLE, ""
                + "height:30;"
                + "hoverBackground:null;"
                + "pressedBackground:null;"
                + "separatorColor:$TableHeader.background;"
                + "font:bold;");
        Maintable.setRowHeight(40);
        Maintable.setIntercellSpacing(new Dimension(0, 1));

        // Table styling
        Maintable.putClientProperty(FlatClientProperties.STYLE, ""
                + "rowHeight:40;"
                + "showHorizontalLines:true;"
                + "intercellSpacing:0,1;"
                + "cellFocusColor:$TableHeader.hoverBackground;"
                + "selectionBackground:$TableHeader.hoverBackground;"
                + "selectionForeground:$Table.foreground;");

        // Scroll styling
        scroll.getVerticalScrollBar().putClientProperty(FlatClientProperties.STYLE, ""
                + "trackArc:999;"
                + "trackInsets:3,3,3,3;"
                + "thumbInsets:3,3,3,3;"
                + "background:$Table.background;");
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        cmdDelete = new com.raven.swing.ButtonAction();
        scroll = new javax.swing.JScrollPane();
        Maintable = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        txtSearch = new javax.swing.JTextField();
        lbTitle = new javax.swing.JLabel();
        cmdEdit = new com.raven.swing.ButtonAction();
        cmdNew = new com.raven.swing.ButtonAction();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(182, 234, 234));

        panel.setBackground(new java.awt.Color(255, 255, 255));

        cmdDelete.setBackground(new java.awt.Color(255, 255, 255));
        cmdDelete.setText("Hapus");
        cmdDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDeleteActionPerformed(evt);
            }
        });

        Maintable.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        Maintable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SELECT", "#", "NAMA", "USER", "PASS", "ROLE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Maintable.setGridColor(new java.awt.Color(255, 255, 255));
        Maintable.setSelectionBackground(new java.awt.Color(255, 255, 255));
        Maintable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MaintableMouseClicked(evt);
            }
        });
        scroll.setViewportView(Maintable);
        if (Maintable.getColumnModel().getColumnCount() > 0) {
            Maintable.getColumnModel().getColumn(0).setMaxWidth(50);
            Maintable.getColumnModel().getColumn(1).setMaxWidth(30);
            Maintable.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        lbTitle.setText("EMPLOYEE");

        cmdEdit.setBackground(new java.awt.Color(255, 255, 255));
        cmdEdit.setText("Edit");
        cmdEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditActionPerformed(evt);
            }
        });

        cmdNew.setBackground(new java.awt.Color(255, 255, 255));
        cmdNew.setText("Tambah");
        cmdNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(lbTitle)
                        .addContainerGap(981, Short.MAX_VALUE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmdNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmdEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmdDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))))
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 1048, Short.MAX_VALUE)
                    .addComponent(scroll))
                .addContainerGap())
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lbTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Data Karyawan");
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(29, 29, 29))
        );
    }// </editor-fold>//GEN-END:initComponents
void loadTable() {
        DefaultTableModel tbl = new DefaultTableModel() {
            @Override
            public Class<?> getColumnClass(int column) {
                if (column == 0) return Boolean.class; 
                return super.getColumnClass(column);
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 0; 
            }
        };

        tbl.addColumn("Select");
        tbl.addColumn("#");
        tbl.addColumn("ID");
        tbl.addColumn("NAMA");
        tbl.addColumn("USER");
        tbl.addColumn("PASS");
        tbl.addColumn("ROLE");
        tbl.addColumn("RFID");
          

        try {
            String query = "select * from users ";
            ResultSet rs = DatabaseConnection.getData(query);
            int no = 1;
            while (rs.next()) {
                String id = rs.getString("id");
                String nama = rs.getString("nama");
                String username = rs.getString("username");
                String password = rs.getString("password");
                String role = rs.getString("role");
                String rfid = rs.getString("kode_RFID");
                
                if(role.equals("1")) {
                    role = "Admin";
                }else if(role.equals("2")) {
                    role = "Kasir";
                }else {
                    role = "Karyawan";
                }
                
                Maintable.setModel(tbl);
                Maintable.getColumnModel().getColumn(0).setPreferredWidth(30);  
                Maintable.getColumnModel().getColumn(1).setPreferredWidth(30);  
                Maintable.getColumnModel().getColumn(2).setPreferredWidth(80); 
                Maintable.getColumnModel().getColumn(3).setPreferredWidth(200); 
                Maintable.getColumnModel().getColumn(4).setPreferredWidth(150);  
                Maintable.getColumnModel().getColumn(5).setPreferredWidth(150);  
                Maintable.getColumnModel().getColumn(6).setPreferredWidth(150);  
                Maintable.getColumnModel().getColumn(6).setPreferredWidth(150);  
                
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.toString());
        }

        Maintable.setModel(tbl);
        sorter = new TableRowSorter<>(tbl);
        Maintable.setRowSorter(sorter);

        // Checkbox di header
        Maintable.getColumnModel().getColumn(0).setHeaderRenderer(new CheckBoxTableHeaderRenderer(Maintable, 0));
    
    }

private void initSearch() {
        txtSearch.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) { search(); }
            public void removeUpdate(DocumentEvent e) { search(); }
            public void changedUpdate(DocumentEvent e) { search(); }

            private void search() {
                String keyword = txtSearch.getText().trim();
                if (keyword.isEmpty()) {
                    sorter.setRowFilter(null);
                } else {
                    sorter.setRowFilter(RowFilter.regexFilter("(?i)" + keyword));
                }
            }
        });
    }
    
    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        
    }//GEN-LAST:event_txtSearchActionPerformed

    private void cmdEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditActionPerformed
int selectedRow = Maintable.getSelectedRow();
if (selectedRow != -1) {
    String selectedId = Maintable.getValueAt(selectedRow, 0).toString(); 
    String nama = Maintable.getValueAt(selectedRow, 1).toString();

    CreateKaryawan.setEditMode(true);
    CreateKaryawan.setSelectedId(selectedId);  
    CreateKaryawan.setName(nama);

    CreateKaryawan.setVisible(true);
} else {
    JOptionPane.showMessageDialog(this, "Pilih baris untuk diedit!");
}

    }//GEN-LAST:event_cmdEditActionPerformed

    private void cmdNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNewActionPerformed
    Main main = (Main) SwingUtilities.getWindowAncestor(this);

    JPanel glass = new JPanel();
    glass.setBackground(new Color(0, 0, 0, 150));
    glass.setOpaque(true);
    main.setGlassPane(glass);
    glass.setVisible(true);

    JDialog dialog = new JDialog(main, "Create Karyawan", true);
    dialog.setSize(400, 450);
    dialog.setLocationRelativeTo(main);

    CreateKaryawan createPanel = new CreateKaryawan(this); 
    dialog.getContentPane().add(createPanel);

    dialog.addWindowListener(new WindowAdapter() {
        @Override
        public void windowClosed(WindowEvent e) {
            glass.setVisible(false);
        }

        @Override
        public void windowClosing(WindowEvent e) {
            glass.setVisible(false);
        }
    });

    dialog.setVisible(true);

    }//GEN-LAST:event_cmdNewActionPerformed

    private void cmdDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDeleteActionPerformed
          if(Maintable.getSelectedRow() != -1) {
            int result = JOptionPane.showConfirmDialog(null, "Yakin Ingin Mengapus Data Tersebut?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if(result == JOptionPane.YES_OPTION){
                String query = "DELETE FROM users WHERE id = ?";

                try (PreparedStatement ps = DatabaseConnection.getConn().prepareStatement(query)) {
                    ps.setString(1, ID);
                    ps.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Data Berhasil DiHapus");
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Error DELETE: " + e.getMessage());
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Silahkan Pilih Baris Untuk Dihapus");
        }
        loadTable();

    }//GEN-LAST:event_cmdDeleteActionPerformed

    private void MaintableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MaintableMouseClicked
        if(Maintable.getSelectedRow() != -1) {
            DefaultTableModel tbl = (DefaultTableModel)Maintable.getModel();
            ID = tbl.getValueAt(Maintable.getSelectedRow(), 0).toString();
        }
    }//GEN-LAST:event_MaintableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Maintable;
    private com.raven.swing.ButtonAction cmdDelete;
    private com.raven.swing.ButtonAction cmdEdit;
    private com.raven.swing.ButtonAction cmdNew;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JPanel panel;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
