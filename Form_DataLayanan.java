/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.raven.form;
import Connection.DatabaseConnection;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.raven.utils.GenerateLayananId;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import com.raven.utils.GeneratePengeluaranLayananId;
import com.raven.table.TableCustom;

/**
 *
 * @author MUTIARA
 */
public class Form_DataLayanan extends javax.swing.JPanel {

    int Condition;
    String ID, ID2;
    private List<String> idBrg = new ArrayList<>();
    public Form_DataLayanan() {
        initComponents();
        TableCustom.apply(Scroll, TableCustom.TableType.DEFAULT);
        TableCustom.apply(scroll, TableCustom.TableType.DEFAULT);
        loadTable();
        MainPanel.setVisible(false);
        loadNamaBarang();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Scroll = new javax.swing.JScrollPane();
        MainTable = new javax.swing.JTable();
        scroll = new javax.swing.JScrollPane();
        SecondTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        qtyText = new javax.swing.JTextField();
        barangText = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        MainPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        namaText = new javax.swing.JTextField();
        hargaText = new javax.swing.JTextField();
        unitText = new javax.swing.JComboBox<>();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setBackground(new java.awt.Color(182, 234, 234));

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Data Layanan");
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        MainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama", "Harga", "Unit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MainTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MainTableMouseClicked(evt);
            }
        });
        Scroll.setViewportView(MainTable);
        if (MainTable.getColumnModel().getColumnCount() > 0) {
            MainTable.getColumnModel().getColumn(0).setMaxWidth(200);
        }

        SecondTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama Barang", "Qty"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scroll.setViewportView(SecondTable);

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setText("Nama Barang");

        barangText.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel3.setText("Jumlah");

        jButton1.setText("Tambah");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Hapus");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Tambah");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Hapus");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Edit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        MainPanel.setBackground(new java.awt.Color(201, 219, 222));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Nama Layanan");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Unit");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Harga");

        unitText.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kilogram", "Meter", "Unit" }));

        jButton6.setText("Simpan");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Batal");

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7))
                    .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(namaText)
                        .addComponent(hargaText, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                        .addComponent(unitText, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namaText, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(jLabel4))
                .addGap(11, 11, 11)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(unitText, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(hargaText, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton6)
                            .addComponent(jButton7))
                        .addGap(16, 16, 16))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(Scroll)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(barangText, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(qtyText, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addGap(36, 36, 36)
                        .addComponent(jButton4)
                        .addGap(33, 33, 33)
                        .addComponent(jButton3)))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(58, 58, 58)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(barangText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(qtyText)
                            .addComponent(jButton1)
                            .addComponent(jButton2))))
                .addGap(12, 12, 12)
                .addComponent(Scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addGap(13, 13, 13))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5)
                    .addComponent(jButton4)
                    .addComponent(jButton3))
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents
void loadNamaBarang()
    {
        DefaultComboBoxModel mdl = new DefaultComboBoxModel();
        try{
            String query = "select * from barang";
            ResultSet rs = DatabaseConnection.getData(query);
            while(rs.next()){
                idBrg.add(rs.getString("id"));
                mdl.addElement(rs.getString("nama"));
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.toString());
        }
        barangText.setModel(mdl);
    }
    void loadSecondTable(String ID) {
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("ID");
        tbl.addColumn("Nama Barang");
        tbl.addColumn("Quantity");
        try{
            String query = "select * from pengeluaran_layanan join barang on pengeluaran_layanan.id_barang = barang.id where pengeluaran_layanan.id_layanan = '"+ ID +"'";
            ResultSet rs = DatabaseConnection.getData(query);
            while(rs.next()){
                String id = rs.getString("pengeluaran_layanan.id");
                String nama = rs.getString("barang.nama");
                String qty = rs.getString("pengeluaran_layanan.qty");
                tbl.addRow(new Object[]{id, nama, qty});
            }
            SecondTable.setModel(tbl);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e.toString());
        }
    }
    void Clear(){
        namaText.setText("");
        hargaText.setText("");
    }
    boolean Validate() 
    {
        if(namaText.getText().equals("") || hargaText.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Nama Dan Harga Layananan Wajib Diisi");
            return false;
        }
        return true;
    }
    boolean Validate2()
    {
        if(qtyText.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Quantity Wajib Diisi");
            return false;
        }
        return true;
    } 
    void loadTable(){
        DefaultTableModel tbl = new DefaultTableModel();
        tbl.addColumn("ID");
        tbl.addColumn("Nama");
        tbl.addColumn("Harga");
        tbl.addColumn("Unit");
        try{
            String query = "select * from layanan";
            ResultSet rs = DatabaseConnection.getData(query);
            if (!rs.isBeforeFirst()) { 
                tbl.setRowCount(0); 
            } else {
                while (rs.next()) {
                    String id = rs.getString("id");
                    String nama = rs.getString("nama");
                    String harga = rs.getString("harga");
                    String unit = rs.getString("unit");
                    tbl.addRow(new Object[]{id, nama, harga, unit});
                }
            }
            MainTable.setModel(tbl);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,e.toString());
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       if(Validate2()) {
            if(MainTable.getSelectedRow() != -1) {
                String query = "INSERT INTO pengeluaran_layanan (id, id_layanan, id_barang, qty) VALUES (?, ?, ?, ?)";
                try (PreparedStatement ps = DatabaseConnection.getConn().prepareStatement(query)) {
                    ps.setString(1, GeneratePengeluaranLayananId.GetId());
                    ps.setString(2, ID);
                    ps.setString(3, idBrg.get(barangText.getSelectedIndex()));
                    ps.setInt(4, Integer.valueOf(qtyText.getText()));
                    ps.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Data Pengeluaran Layanan Berhasil Ditambahkan");
                    loadSecondTable(ID);
                    Clear();
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Error INSERT: " + e.getMessage());
                }
            }else{
                JOptionPane.showMessageDialog(this, "Silahkan Pilih Baris Layanan Untuk Ditambahkan Data Pengeluaran Barangnya");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(SecondTable.getSelectedRow() != -1) {
            int result = JOptionPane.showConfirmDialog(null, "Yakin Ingin Mengapus Data Tersebut?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if(result == JOptionPane.YES_OPTION){
                String query = "DELETE FROM pengeluaran_layanan WHERE id = ?";

                try (PreparedStatement ps = DatabaseConnection.getConn().prepareStatement(query)) {
                    ps.setString(1, ID2);
                    ps.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Data Berhasil DiHapus");
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Error DELETE: " + e.getMessage());
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Silahkan Pilih Baris Pengeluaran Layanan Untuk Dihapus");
        }
        loadSecondTable(ID);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Clear();
        Condition = 1;
        MainPanel.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       if(MainTable.getSelectedRow() != -1) {
            int result = JOptionPane.showConfirmDialog(null, "Yakin Ingin Mengapus Data Tersebut?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if(result == JOptionPane.YES_OPTION){
                String query = "DELETE FROM layanan WHERE id = ?";

                try (PreparedStatement ps = DatabaseConnection.getConn().prepareStatement(query)) {
                    ps.setString(1, ID);
                    ps.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Data Berhasil DiHapus");
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Error DELETE: " + e.getMessage());
                }
            }
        }else{
            JOptionPane.showMessageDialog(this, "Silahkan Pilih Baris Untuk Dihapus");
        }
        loadTable();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if(MainTable.getSelectedRow() != -1) {
            MainPanel.setVisible(true);
            Condition = 2;
        }else{
            JOptionPane.showMessageDialog(this, "Silahkan Pilih Baris Untuk Diubah");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void MainTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MainTableMouseClicked

        if(MainTable.getSelectedRow() != -1) {
            DefaultTableModel tbl = (DefaultTableModel)MainTable.getModel();
            ID = tbl.getValueAt(MainTable.getSelectedRow(), 0).toString();
            namaText.setText(tbl.getValueAt(MainTable.getSelectedRow(), 1).toString());
            hargaText.setText(tbl.getValueAt(MainTable.getSelectedRow(), 2).toString());
            unitText.setSelectedItem(tbl.getValueAt(MainTable.getSelectedRow(), 3).toString());

            loadSecondTable(ID);
        }
    }//GEN-LAST:event_MainTableMouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if(Validate())
        {
            if (Condition == 1) {
                String id = GenerateLayananId.GetId();
                String nama = namaText.getText();
                int harga = Integer.parseInt(hargaText.getText());
                String unit = unitText.getSelectedItem().toString();

                String query = "INSERT INTO layanan (id, nama, harga, unit) VALUES (?, ?, ?, ?)";
                try (PreparedStatement ps = DatabaseConnection.getConn().prepareStatement(query)) {
                    ps.setString(1, id);
                    ps.setString(2, nama);
                    ps.setInt(3, harga);
                    ps.setString(4, unit);
                    ps.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Data Layanan Berhasil Ditambahkan");
                    loadTable();
                    ID = null;
                    MainPanel.setVisible(false);
                    Clear();
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Error INSERT: " + e.getMessage());
                }
            }

            if (Condition == 2) {
                String nama = namaText.getText();
                int harga = Integer.parseInt(hargaText.getText());
                String unit = unitText.getSelectedItem().toString();

                String query = "UPDATE layanan SET nama = ?, harga = ?, unit = ? WHERE id = ?";
                try (PreparedStatement ps = DatabaseConnection.getConn().prepareStatement(query)) {
                    ps.setString(1, nama);
                    ps.setInt(2, harga);
                    ps.setString(3, unit);
                    ps.setString(4, ID);
                    ps.executeUpdate();

                    JOptionPane.showMessageDialog(null, "Data Layanan Berhasil Diubah");
                    loadTable();
                    ID = null;
                    MainPanel.setVisible(false);
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Error UPDATE: " + e.getMessage());
                }
            }

        }
    }//GEN-LAST:event_jButton6ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel MainPanel;
    private javax.swing.JTable MainTable;
    private javax.swing.JScrollPane Scroll;
    private javax.swing.JTable SecondTable;
    private javax.swing.JComboBox<String> barangText;
    private javax.swing.JTextField hargaText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField namaText;
    private javax.swing.JTextField qtyText;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JComboBox<String> unitText;
    // End of variables declaration//GEN-END:variables
}
