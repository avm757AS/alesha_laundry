
package com.raven.form;
import Connection.DatabaseConnection;
import com.raven.table.TableCustom;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.raven.utils.GeneratePemasukanBarangId;
public class Form_BarangMasuk extends javax.swing.JPanel {

    private List<String> idBrg = new ArrayList<>();
    private List<String> SelidBrg = new ArrayList<>();
    public Form_BarangMasuk() {
        initComponents();
        TableCustom.apply(Scroll, TableCustom.TableType.DEFAULT);
        loadNamaBarang();   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Scroll = new javax.swing.JScrollPane();
        MainTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        hargaText = new javax.swing.JTextField();
        barangText = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        qtyText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        totalText = new javax.swing.JTextField();
        tanggalText = new com.toedter.calendar.JDateChooser();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        catatanText = new javax.swing.JTextField();

        setBackground(new java.awt.Color(182, 234, 234));

        jLabel1.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Pemasukan Barang");
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));

        MainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NAMA BARANG", "HARGA", "JUMLAH", "SUBTOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Scroll.setViewportView(MainTable);
        if (MainTable.getColumnModel().getColumnCount() > 0) {
            MainTable.getColumnModel().getColumn(0).setMaxWidth(150);
        }

        jButton1.setText("Hapus");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Barang");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Harga");

        barangText.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Jumlah");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Total");

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Tanggal");

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Catatan");

        totalText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalTextActionPerformed(evt);
            }
        });

        jButton2.setText("Simpan");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Simpan");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Batal");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(138, 138, 138))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 934, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(hargaText))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(barangText, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(qtyText, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton3)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton4)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(totalText, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tanggalText, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(catatanText, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(90, 90, 90)))
                        .addGap(34, 34, 34))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(barangText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(qtyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(totalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(catatanText, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tanggalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(hargaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3)
                        .addComponent(jButton4)
                        .addComponent(jLabel6)))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (valAdd()) {
            DefaultTableModel tbl = (DefaultTableModel) MainTable.getModel();
            String ID;

            if (tbl.getRowCount() > 0) {
                String lastIdInTable = tbl.getValueAt(tbl.getRowCount() - 1, 0).toString();
                int lastNumber = Integer.parseInt(lastIdInTable.replaceAll("[^0-9]", ""));
                int newNumber = lastNumber + 1;
                ID = "DPB" + String.format("%02d", newNumber);
            } else {
                ID = GeneratePemasukanBarangId.GetId();
            }

            String IDBRG = idBrg.get(barangText.getSelectedIndex());
            String Nama = barangText.getSelectedItem().toString();
            String Harga = hargaText.getText();
            String Quantity = qtyText.getText();
            String Subtotal = String.valueOf((Integer.valueOf(Harga) * Integer.valueOf(Quantity)));

            boolean isUpdated = false;
            for (int i = 0; i < tbl.getRowCount(); i++) {
                String existingIDBRG = SelidBrg.get(i);
                if (existingIDBRG.equals(IDBRG)) {
                    tbl.setValueAt(Harga, i, 2);
                    tbl.setValueAt(Quantity, i, 3);
                    tbl.setValueAt(Subtotal, i, 4);

                    isUpdated = true;
                    break;
                }
            }

            if (!isUpdated) {
                SelidBrg.add(IDBRG);
                tbl.addRow(new Object[]{ID, Nama, Harga, Quantity, Subtotal});
            }

            Clear();
            Calculate();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel tbl = (DefaultTableModel) MainTable.getModel();

        int selectedRow = MainTable.getSelectedRow();

        if (selectedRow >= 0) {
            SelidBrg.remove(selectedRow);

            tbl.removeRow(selectedRow);

            JOptionPane.showMessageDialog(this, "Data berhasil dihapus.");
        } else {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (totalText.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Total wajib diisi.");
            return;
        }

        if (tanggalText.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Tanggal wajib diisi.");
            return;
        }

        Date selectedDate = tanggalText.getDate();
        Date currentDate = new Date();

        if (selectedDate.after(currentDate)) {
            JOptionPane.showMessageDialog(this, "Tanggal tidak boleh melebihi tanggal saat ini.");
            return;
        }

        String total = totalText.getText();
        String catatan = catatanText.getText();
        String tanggal = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(selectedDate);

        String idPemasukanBarang = GeneratePemasukanBarangId.GetId();

        String queryPemasukanBarang = "INSERT INTO pemasukan_barang (id, total, catatan, tanggal) VALUES (?, ?, ?, ?)";
        try (PreparedStatement ps = DatabaseConnection.getConn().prepareStatement(queryPemasukanBarang)) {
            ps.setString(1, idPemasukanBarang);
            ps.setInt(2, Integer.parseInt(total));
            ps.setString(3, catatan.isEmpty() ? null : catatan);
            ps.setString(4, tanggal);
            ps.executeUpdate();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan data pemasukan_barang: " + e.getMessage());
            return;
        }

        DefaultTableModel tbl = (DefaultTableModel) MainTable.getModel();
        String queryDetail = "INSERT INTO detail_pemasukan_barang (id, id_pemasukan_barang, id_barang, harga, qty, subtotal) VALUES (?, ?, ?, ?, ?, ?)";
        try (PreparedStatement ps = DatabaseConnection.getConn().prepareStatement(queryDetail)) {
            for (int i = 0; i < tbl.getRowCount(); i++) {
                String idDetail = tbl.getValueAt(i, 0).toString();
                String idBarang = SelidBrg.get(i);
                String harga = tbl.getValueAt(i, 2).toString();
                String qty = tbl.getValueAt(i, 3).toString();
                String subtotal = tbl.getValueAt(i, 4).toString();

                ps.setString(1, idDetail);
                ps.setString(2, idPemasukanBarang);
                ps.setString(3, idBarang);
                ps.setInt(4, Integer.parseInt(harga));
                ps.setInt(5, Integer.parseInt(qty));
                ps.setInt(6, Integer.parseInt(subtotal));
                ps.addBatch();
            }
            ps.executeBatch();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan data detail_pemasukan_barang: " + e.getMessage());
            return;
        }

        JOptionPane.showMessageDialog(this, "Data berhasil disimpan.");
        Clear();
        tbl.setRowCount(0);
        SelidBrg.clear();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void totalTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalTextActionPerformed

    void loadNamaBarang()
    {
        DefaultComboBoxModel mdl = new DefaultComboBoxModel();
        try{
            String query = "select * from barang";
            ResultSet rs = DatabaseConnection.getData(query);
            while(rs.next()){
                idBrg.add(rs.getString("id"));
                mdl.addElement(rs.getString("nama"));
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e.toString());
        }
        barangText.setModel(mdl);
    }
    boolean valAdd()
    {
        if(hargaText.getText().equals("") || qtyText.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this, "Harga Dan Quantity Wajib Diisi");
            return false;
        }
        return true;
    }
    void Clear(){
        hargaText.setText("");
        qtyText.setText("");
    }
    void Calculate(){
        DefaultTableModel tbl = (DefaultTableModel)MainTable.getModel();
        int har = 0;
        for(int i = 0; i < tbl.getRowCount(); i++){
            har += Integer.parseInt(tbl.getValueAt(i, 4).toString());
            totalText.setText(String.valueOf(har));
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable MainTable;
    private javax.swing.JScrollPane Scroll;
    private javax.swing.JComboBox<String> barangText;
    private javax.swing.JTextField catatanText;
    private javax.swing.JTextField hargaText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField qtyText;
    private com.toedter.calendar.JDateChooser tanggalText;
    private javax.swing.JTextField totalText;
    // End of variables declaration//GEN-END:variables
}
